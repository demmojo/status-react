#!/usr/bin/env bash

#
# This script takes a maven-inputs.txt file and builds a Nix expression that can be used by maven-repo-builder.nix to produce a path to a local Maven repository
#

function getSHA() {
  nix-prefetch-url --type sha256 "$1" 2> /dev/null
}

_tmp=$(mktemp)
sort $1 | uniq > $_tmp
mavenUrl='https://repo1.maven.org/maven2'
clojarsUrl='https://repo.clojars.org'
apacheUrl='https://repo.maven.apache.org/maven2'
jcenterUrl='https://jcenter.bintray.com'
googleUrl='https://dl.google.com/dl/android/maven2'
fabricUrl='https://maven.fabric.io/public'
echo "# Auto-generated by $(realpath --relative-to="$(dirname $1)" ${BASH_SOURCE})
{}:

let
  repositories = {
    apache = \"$mavenUrl\";
    clojars = \"$clojarsUrl\";
    fabric-io = \"$fabricUrl\";
    google = \"$googleUrl\";
    jcenter = \"$jcenterUrl\";
    maven = \"$mavenUrl\";
  };

in {"
while read depurl
do
  if [ -n "$depurl" ]; then
    if [[ $depurl = "$jcenterUrl"* ]]; then
      host='jcenter'
      prefix=$jcenterUrl
    elif [[ $depurl = "$googleUrl"* ]]; then
      host='google'
      prefix=$googleUrl
    elif [[ $depurl = "$fabricUrl"* ]]; then
      host='fabric-io'
      prefix=$fabricUrl
    elif [[ $depurl = "$mavenUrl"* ]]; then
      host='maven'
      prefix=$mavenUrl
    elif [[ $depurl = "$clojarsUrl"* ]]; then
      host='clojars'
      prefix=$clojarsUrl
    elif [[ $depurl = "$apacheUrl"* ]]; then
      host='apache'
      prefix=$apacheUrl
    else
      echo "Unknown host in $depurl, exiting."
      exit 1
    fi
    deppath="${depurl/$prefix\//}"
    pom_sha256=$(getSHA "$depurl.pom")
    [ -n "$pom_sha256" ] && pom_sha1=$(curl -s "$depurl.pom.sha1") || unset pom_sha1
    jar_sha256=$(getSHA "$depurl.jar")
    type='jar'
    if [ -z "$jar_sha256" ]; then
      jar_sha256=$(getSHA "$depurl.aar")
      [ -n "$jar_sha256" ] && type='aar'
    fi
    [ -n "$jar_sha256" ] && jar_sha1=$(curl -s "$depurl.${type}.sha1") || unset jar_sha1

    if [ -z "$pom_sha256" ] && [ -z "$jar_sha256" ] && [ -z "$aar_sha256" ]; then
        echo "Warning: failed to download $depurl" > /dev/stderr
        echo "Exiting." > /dev/stderr
    fi

    echo -n "  \"$depurl\" = {
    host = repositories.$host;
    path = \"$deppath\";
    type = \"$type\";"
    if [ -n "$pom_sha256" ]; then
      echo -n "
    pom = {
      sha1 = \"$pom_sha1\";
      sha256 = \"$pom_sha256\";
    };"
    fi
    if [ -n "$jar_sha256" ]; then
      echo -n "
    jar = {
      sha1 = \"$jar_sha1\";
      sha256 = \"$jar_sha256\";
    };"
    fi
    echo "
  };"
  fi
done < $_tmp

rm $_tmp

echo "}"
